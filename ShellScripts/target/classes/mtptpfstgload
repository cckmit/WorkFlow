#!/bin/bash
#*****************************************************************************#
#   SCRIPT NAME: mtpgitmigtatenonibm                                          #
#                                                                             #
#   DESCRIPTION:                                                              #
#      Script to create production system branch in repositories and          #
#      to migrate the source code from non-ibm path to SCM GIT repository     #
#   INPUT:                                                                    #
#      $1  - Source Core                                                      #
#      $2  - GIT URL                                                          #
#      $3  - package name SYS or FLS                                          #             
#                                                                             #
#   OUTPUT:                                                                   #
#      exit with 0, successfull code migration                                #
#      exit with 8, error message.                                            #
#                                                                             #
#                                                                             #
#*****************************************************************************#
#*****************************************************************************#
#                                                                             #
#                            M A I N T E N A N C E                            #
#                                                                             #
#-----------------------------------------------------------------------------#
#   MMDDYYYY    INIT         COMMENT                                          #
#   --------    ----------   -------------------------------------------------#
#   25102017    NARASHIMAN   created the script.                              #
#*****************************************************************************#
#unset MTP_ENV                          #DEBUG
#source "${MTP_ENV:=$PWD}/.mtpconfig"
source "${MTP_ENV:=$PWD}/mtplibrary"
#-----------------------------------------------------------------------------#
declare -i _MxIP=1;                    #Expected number of input parms
declare -i _ReIP="$#";                 #Received number of input parms
#
SourceCore="$1";                       #Read core data as input
#SourcePath="$2";                       #Read source path as input
#GitSSHRURL="$3";                       #Read Git remote repository ssh url
#packagename="$4";                      #Read package name
#
minInputValidation "${_MxIP}" "${_ReIP}"; RC="$?";
#
#-----------------------------------------------------------------------------#
#

#Start main execution if validation success
if [ "$RC" -eq 0 ]; then

  case "${SourceCore}" in
  apo)
  zLockDate=20140308;
  ;;
  pgr)
  zLockDate=20120229;
  ;;
  pre)
  zLockDate=20130706;
  ;;
  wsp)
  zLockDate=20140818;
  ;;
  air)
  zLockDate=20160408;
  ;;
  res)
  zLockDate=20150220;
  ;;
  oss)
  zLockDate=20150417;
  esac
  cd /ztpfsys/${SourceCore}/tools/
  sed -n 11,\$p ${SourceCore}_migrate.txt > .${SourceCore}_BaseCopy
  sort -k1.25,1.33 .${SourceCore}_BaseCopy > .${SourceCore}_DateSorted
  DateList=($(sort -k1.25,1.33 .${SourceCore}_DateSorted | cut -c 25-33))
  for((i=1; i<${#DateList[@]}; i++));
  do
    if [ "$zLockDate" -eq "${DateList[i]}" ] || [ "${DateList[i]}" -gt "$zLockDate" ]; then
	  sed -n "$i",\$p .${SourceCore}_DateSorted > .${SourceCore}_Afterdate
	  sed -n 1,"$i"p .${SourceCore}_DateSorted > .${SourceCore}_Beforedate
	  break;
	fi
  done
  if [ -f /ztpfsys/${SourceCore,,}/tools/.${SourceCore,,}_Afterdate ]; then
    count=0;
    while read -r line
    do
	  FuncArea=$(echo $line | cut -d" " -f5)
	  Date=$(echo $line | cut -d" " -f7)
	  version=$(echo $line | cut -d" " -f2)
	  status=$(echo $line | cut -d" " -f6)
	  Userid=$(echo $line | cut -d" " -f8)
	  LoadPath=$(echo $line | cut -d" " -f9)
	  segment=$(echo $line | cut -d" " -f1)
	  filetype=$(echo $line | cut -d" " -f3)
	  component=$(echo $line | cut -d" " -f4)
#	  count=$count+1;
      if [[ "$filetype" == "h" ]] || [[ "$filetype" == "mac" ]] || [[ "$filetype" == "bsc" ]]; then
	    if [ "$LoadPath" != '' ]; then
		  if [[ "$filetype" == "mac" ]]; then
		     if [ -d /ztpfrepos/loads/${LoadPath}/${SourceCore,,} ]; then
		       if [ -f /ztpfrepos/loads/${LoadPath}/${SourceCore,,}/marco/${segment}.${filetype} ]; then
			     mac="/ztpfrepos/loads/${LoadPath}/${SourceCore,,}/marco/${segment}.${filetype}"
				 sed -i -e "$ a OK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
		       else
			     touch ${SourceCore,,}_AZMigPathFile.txt
				 echo "OK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > ${SourceCore,,}_AZMigPathFile.txt
		       fi
             # else
               # if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
			    # sed -i -e "$ a NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
			   # else
			    # touch ${SourceCore,,}_AZMigPathFile.txt
			    # echo "NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > ${SourceCore,,}_AZMigPathFile.txt
			   # fi			 
		     fi
         elif [[ "$filetype" == "h" ]]; then
		     if [ -d /ztpfrepos/loads/${LoadPath}/${SourceCore,,} ]; then
		       if [ -f /ztpfrepos/loads/${LoadPath}/${SourceCore,,}/include/${segment}.${filetype} ]; then
			     header="/ztpfrepos/loads/${LoadPath}/${SourceCore,,}/marco/${segment}.${filetype}"
				 sed -i -e "$ a OK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
		       else
			     touch ${SourceCore,,}_AZMigPathFile.txt
				 echo "OK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > ${SourceCore,,}_AZMigPathFile.txt
		       fi
             # else
			   # if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
			    # sed -i -e "$ a NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
			   # else
			    # touch ${SourceCore,,}_AZMigPathFile.txt
			    # echo "NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > ${SourceCore,,}_AZMigPathFile.txt
			   # fi			 
		      fi
         elif [[ "$filetype" == "bsc" ]]; then
		     if [ -d /ztpfrepos/loads/${LoadPath}/${SourceCore,,} ]; then
		       if [ -f /ztpfrepos/loads/${LoadPath}/${SourceCore,,}/src/${segment:0:1}/${segment:0:4}.mak ]; then
			      mak="/ztpfrepos/loads/${LoadPath}/${SourceCore,,}/src/${segment:0:1}/${segment:0:4}.mak"
				  sed -i -e "$ a OK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
		       else
			     touch ${SourceCore,,}_AZMigPathFile.txt
				 echo "OK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > ${SourceCore,,}_AZMigPathFile.txt
		       fi
             # else	
			   # if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
			    # sed -i -e "$ a NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
			   # else
			    # touch ${SourceCore,,}_AZMigPathFile.txt
			    # echo "NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > ${SourceCore,,}_AZMigPathFile.txt
			   # fi			 
		      fi
         fi		  
		fi
      else	  
	   # if [ "$LoadPath" != '' ]; then
	      # if [ -d /ztpfrepos/loads/${LoadPath}/${SourceCore,,} ]; then 
		     # if [ -f /ztpfrepos/loads/${LoadPath}/${SourceCore,,}/src/${segment:0:1}/${segment}.${filetype} ]; then
			   # src="/ztpfrepos/loads/${LoadPath}/${SourceCore}/src/${segment:0:1}/${segment}.${filetype}"
			     # if [ -f /ztpfrepos/loads/${LoadPath}/${SourceCore,,}/obj/${segment}.o ]; then
				   # obj="/ztpfrepos/loads/${LoadPath}/${SourceCore}/obj/${segment}.o"
				   # if [ -f /ztpfrepos/loads/${LoadPath}/${SourceCore,,}/lst/${segment}.lst ]; then
				     # lst="/ztpfrepos/loads/${LoadPath}/${SourceCore}/lst/${segment}.lst"
				      # if [ -f /ztpfrepos/loads/${LoadPath}/${SourceCore,,}/lst/${segment^^}.map ]; then
					    # map="/ztpfrepos/loads/${LoadPath}/${SourceCore}/lst/${segment^^}.map"
						# if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
						  # sed -i -e "$ a OK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_AZMigPathFile.txt"
						# else
						  # touch ${SourceCore,,}_AZMigPathFile.txt
						  # echo "OK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > ${SourceCore,,}_AZMigPathFile.txt
						# fi
					  # else
						# if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
						  # sed -i -e "$ a NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_AZMigPathFile.txt"
						# else
						  # touch ${SourceCore,,}_AZMigPathFile.txt
						  # echo "NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > ${SourceCore,,}_AZMigPathFile.txt
						# fi
					  # fi
				   # else
				     # if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
					  # sed -i -e "$ a NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_AZMigPathFile.txt"
					 # else
					   # touch ${SourceCore,,}_AZMigPathFile.txt
					   # echo "NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > ${SourceCore,,}_AZMigPathFile.txt
				     # fi
				   # fi
				 # else 
     			   # if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
					 # sed -i -e "$ a NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
				   # else
					 # touch ${SourceCore,,}_AZMigPathFile.txt
					 # echo "NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > ${SourceCore,,}_AZMigPathFile.txt
				   # fi
				 # fi
			 # else
			   # if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
				 # sed -i -e "$ a NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
			   # else
				 # touch ${SourceCore,,}_AZMigPathFile.txt
				 # echo "NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > ${SourceCore,,}_AZMigPathFile.txt
		       # fi
			 # fi
		  # else 
			# if [ -f ${SourceCore,,}_AZMigPathFile.txt ]; then
			  # sed -i -e "$ a NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
			# else
			  # touch ${SourceCore,,}_AZMigPathFile.txt
			  # echo "NK $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > ${SourceCore,,}_AZMigPathFile.txt
			# fi
		  # fi		  
	   # fi
     fi	   
	done < .${SourceCore,,}_Afterdate
  fi
fi
#-----------------------------------------------------------------------------#
exit "$RC"
#-----------------------------------------------------------------------------#
# vim: filetype=bash
  
 