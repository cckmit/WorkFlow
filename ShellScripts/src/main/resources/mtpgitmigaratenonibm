#!/bin/bash
# shellcheck disable=SC2206,SC2207,SC1117,SC2034,SC2179,SC2164,SC2128,SC2178
#*****************************************************************************#
#   SCRIPT NAME: mtpgitmigtatenonibm                                          #
#                                                                             #
#   DESCRIPTION:                                                              #
#      Script to create production system branch in repositories and          #
#      to migrate the source code from non-ibm path to SCM GIT repository     #
#                                                                             #
#   NOTE: Don't alter CONSOLE messages                                        #
#                                                                             #
#   INPUT:                                                                    #
#      $1  - Source Core                                                      #
#      $2  - GIT URL                                                          #
#      $3  - package name SYS or FLS                                          #
#                                                                             #
#   OUTPUT:                                                                   #
#      exit with 0, successfull code migration.                               #
#      exit with 8, error message                                             #
#                                                                             #
#                                                                             #
#*****************************************************************************#
#*****************************************************************************#
#                                                                             #
#                            M A I N T E N A N C E                            #
#                                                                             #
#-----------------------------------------------------------------------------#
#   MMDDYYYY    INIT         COMMENT                                          #
#   --------    ----------   -------------------------------------------------#
#   25102017    NARASHIMAN   created the script                               #
#   23022018    VINOTH       checkpoint for PULL and hash                     #
#   29032018    ARUL         Updated to support itrative migration            #
#   01062018    VINOTH       Updated to support Dollor and Pick Field         #
#   07192018    VINOTH       Sabre .INC for wsp and verioned folder for all   #
#   05102018    VINOTH       Added ProcessBar for BZmigration and AZmigration #
#   06102018    VINOTH       check added for AIR No aftermigration check res  #
#   12102018    VINOTH       Migrate OCO codes to git for nonibm series       #
#   04292019    GOWTHAM      Updated with logger support                      #
#   07152019    VINOTH       Migrate macro codes from ual and macro with a    #
#   02112020    VINOTH       No name issue for fallback plans                 #
#*****************************************************************************#
#unset MTP_ENV                          #DEBUG
#source "${MTP_ENV:=$PWD}/.mtpconfig"
# shellcheck disable=1090
source "${MTP_ENV:=$PWD}/mtplibrary"
#-----------------------------------------------------------------------------#
declare -i _MxIP=1;                    #Expected number of input parms
declare -i _ReIP="$#";                 #Received number of input parms
#
SourceCore="$1";                       #Read core data as input
#
SPID=$$; #To get process id of the script
SPNM=$0; #To get script name
minInputValidation "${_MxIP}" "${_ReIP}"; RC="$?";
sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:Start ${SourceCore} RC:$RC"
#
#-----------------------------------------------------------------------------#
#
tempdata=/ztpftemp/output/${SourceCore}
#Start main execution validation success
if [ "$RC" -eq 0 ]; then
  sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:MCF analysis started. RC:$RC"
  echo -e "INFO: MCF analysis started."
  case "${SourceCore}" in
    apo)
      zLockDate=20140308;
      SourcePath="/ztpfrepos/tpfgi/cc/gal"
    ;;
    pgr)
      zLockDate=20120229;
      SourcePath="/ztpfrepos/tpfgi/cc/gal"
    ;;
    pre)
      zLockDate=20130706;
      SourcePath="/ztpfrepos/tpfgi/cc/gal"
    ;;
    wsp)
      zLockDate=20140818;
      SourcePath="/ztpfrepos/tpfps/cc/gds"
    ;;
    air)
      zLockDate=20160408;
      SourcePath="/ztpfrepos/tpfdl/cc/${SourceCore,,}"
    ;;
    res)
      zLockDate=20150220;
      SourcePath="/ztpfrepos/tpfdl/cc/${SourceCore,,}"
    ;;
    oss)
      zLockDate=20150417;
      SourcePath="/ztpfrepos/tpfdl/cc/${SourceCore,,}"
  esac
  if [ -d "/migrate/ztpfsys/${SourceCore}/tools/" ]; then
    LCLSYS_PATH="/migrate/ztpfsys"
  elif [ -d "/ztpfsys/${SourceCore}/tools/" ]; then
    LCLSYS_PATH="/ztpfsys"
  else
    sendLOG "ERROR" "pid[${SPID}]" "${SPNM##*/}:/ztpfsys directory not found RC:$EC"
    echo -e "ERROR: /ztpfsys directory not found".
    RC="$EC";
  fi
  if [ "$RC" -eq 0 ]; then
    pushd "${LCLSYS_PATH}/${SourceCore}/tools/" &> /dev/null
    [ -f ".${SourceCore}_BaseCopy" ] && rm ".${SourceCore}_BaseCopy"
    [ -f ".${SourceCore}_DateSorted" ] && rm ".${SourceCore}_DateSorted"
    [ -f ".${SourceCore}_Beforedate" ] && rm ".${SourceCore}_Beforedate"
    [ -f ".${SourceCore}_Beforedate3" ] && rm ".${SourceCore}_Beforedate3"
    [ -f ".${SourceCore}_Beforedate2" ] && rm ".${SourceCore}_Beforedate2"
    [ -f ".${SourceCore}_Beforedate1" ] && rm ".${SourceCore}_Beforedate1"
    [ -f ".${SourceCore}_Afterdate" ] && rm ".${SourceCore}_Afterdate"
    [ -f "${SourceCore,,}_BZMigPathFile.txt" ] && rm "${SourceCore,,}_BZMigPathFile.txt"
    [ -f "${SourceCore,,}_AZMigPathFile.txt" ] && rm "${SourceCore,,}_AZMigPathFile.txt"
    [ -f "${SourceCore,,}_migrate_scm.txt" ] && rm "${SourceCore,,}_migrate_scm.txt"
    [ -f "${SourceCore,,}_migrate_scm.txt" ] && rm "${SourceCore,,}_migrate_scm_new.txt"
    grep -v "\..FIELD" "${SourceCore}_migrate.txt" > ".${SourceCore}_BaseCopy"
    sort -k1.25,1.33 ."${SourceCore}_BaseCopy" > ."${SourceCore}_DateSorted"
    DateList=($(sort -k1.25,1.33 ."${SourceCore}_DateSorted" | cut -c 25-33))
    for((i=1; i<${#DateList[@]}; i++));
    do
      if [ "$zLockDate" -eq "${DateList[i-1]}" ] || [ "${DateList[i-1]}" -gt "$zLockDate" ]; then
        sed -n "$i",\$p ".${SourceCore}_DateSorted" > ".${SourceCore}_Afterdate"
        i=$((i-1));
        sed -n 1,"$i"p ".${SourceCore}_DateSorted" > ".${SourceCore}_Beforedate3"
        break;
      fi
    done
    if [ ! -f ".${SourceCore}_Beforedate3" ] && [ ! -f ".${SourceCore}_Afterdate" ]; then
      cat ".${SourceCore}_DateSorted" > ".${SourceCore}_Beforedate3"
      touch ".${SourceCore}_Afterdate"
    fi
    count=0;
    while read -r line
    do
      count=$((count+1));
      sed "${count}s/\r\?$/ OK/" -i ".${SourceCore}_Afterdate"
    done < ".${SourceCore,,}_Afterdate"
    sort -k1.1,1.8 -k7.1,7.9r ".${SourceCore}_Beforedate3" > ".${SourceCore}_Beforedate2"
    count=0;
    Previous_seg=""
    while read -r line
    do
      segment=${line:0:8}
      filetype=${line:12:3}
      filetype1="$(echo "$filetype" | tr -d ' ')"
      count=$((count+1));
      if [[ "$filetype1" != "h" ]] && [[ "$filetype1" != "mac" ]] && [[ "$filetype1" != "mak" ]]; then
        if [[ "$Previous_seg" == "$segment" ]]; then
          #shellcheck disable=SC2094
          sed "${count}s/\r\?$/ NK/" -i ".${SourceCore}_Beforedate2"
        else
          #shellcheck disable=SC2094
          sed "${count}s/\r\?$/ OK/" -i ".${SourceCore}_Beforedate2"
          Previous_seg="$segment"
        fi
      fi
    done < ."${SourceCore}_Beforedate2"
    sort -k1.1,1.8 ".${SourceCore}_Beforedate2" > ".${SourceCore}_Beforedate1"
    sort -k1.25,1.33 ".${SourceCore}_Beforedate1" > ".${SourceCore}_Beforedate"
    #
    if [ -f "${LCLSYS_PATH}/${SourceCore,,}/tools/.${SourceCore,,}_Beforedate" ]; then
      count=0;
      # shellcheck disable=SC2002
      _endbefore=$(cat "${LCLSYS_PATH}/${SourceCore,,}/tools/.${SourceCore,,}_Beforedate" | wc -l)
      while read -r line
      do
        UpdateInd=""
        segment=${line:0:8}
        segment1="$(echo "$segment" | tr -d ' ')"
        version=${line:8:2}
        version1="$(echo "$version" | tr -d ' ')"
        filetype=${line:12:3}
        filetype1="$(echo "$filetype" | tr -d ' ')"
        component=${line:16:1}
        FuncArea=${line:18:5}
        FuncArea1="$(echo "$FuncArea" | tr -d ' ')"
        status=${line:23:1}
        Date=${line:25:8}
        UpdateInd=${line:316:1}
        Userid=${line:34:8}
        Userid1="$(echo "$Userid" | tr -d ' ')"
        if [ "$Userid1" == '' ]; then
          Userid="_NOUSER_"
        fi
        LoadPath=${line:43:14}
        LoadPath1="$(echo "$LoadPath" | tr -d ' ')"
        if [ "$LoadPath1" == '' ]; then
          LoadPath="_NO_PLAN_NAME_"
        fi
        if echo "$line" | grep -q " OK"; then
          Recentload="OK"
        else
          Recentload="NK"
        fi
        count=$((count+1));
        if [[ "${SourceCore}" == +($REF_T4_CORE) ]];then
          SourcePath1="/ztpfrepos/tpfgi/cc/ual"
          if [[ "$filetype1" != "h" ]] && [[ "$filetype1" != "mac" ]] && [[ "$filetype1" != "bsc" ]] && [[ "$filetype1" != "mak" ]] && [[ "$filetype1" != "oco" ]]; then
            if [ -d "${SourcePath}" ]; then
              if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
              || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]\
              || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "/ztpftemp/nk/${SourceCore}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "/ztpftemp/nk/${SourceCore}/${segment1}${version1}.${filetype1}" ]; then
                  src="/ztpftemp/nk/${SourceCore}/${segment1}${version1}.${filetype1}";
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/obj/${segment1}.o" ] && [ "${Recentload}" == OK ]; then
                  obj="/ztpfrepos/${SourceCore,,}/obj/${segment1}.o"
                  if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1}.lst" ]; then
                    lst="/ztpfrepos/${SourceCore,,}/lst/${segment1}.lst"
                    if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                      if [[ "${component}" == "N" ]]; then
                        map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                      else
                        map=""
                      fi
                      if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_BZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "${segment1}.ztpfgivi") )
                        #shellcheck disable=SC2128
                        if [[ "${ztpfgivi}" != '' ]]; then
                          #shellcheck disable=SC2178
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count}s/$/ $ztpfgivi/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                        fi
                        sbtasm=( $(find "/ztpfrepos/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                        if [ "$sbtasm" != '' ]; then
                          sbtasm="${sbtasm//\//\/}";
                          sed "${count}s/$/ $sbtasm/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        sbtlst=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count}s/$/ $sbtlst/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        tpfarc=( $(find "/ztpfrepos/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                        if [ "$tpfarc" != '' ]; then
                          tpfarc="${tpfarc//\//\/}";
                          sed "${count}s/$/ $tpfarc/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                      else
                        touch "${SourceCore,,}_BZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > "${SourceCore,,}_BZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "${segment1}.ztpfgivi") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count}s/$/ $ztpfgivi/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                        fi
                        sbtasm=( $(find "/ztpfrepos/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                        if [ "$sbtasm" != '' ]; then
                          sbtasm="${sbtasm//\//\/}";
                          sed "${count}s/$/ $sbtasm/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        sbtlst=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count}s/$/ $sbtlst/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        tpfarc=( $(find "/ztpfrepos/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                        if [ "$tpfarc" != '' ]; then
                          tpfarc="${tpfarc//\//\/}";
                          sed "${count}s/$/ $tpfarc/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                      fi
                    else
                      if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_BZMigPathFile.txt"
                      else
                        touch "${SourceCore,,}_BZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > "${SourceCore,,}_BZMigPathFile.txt"
                      fi
                    fi
                  else
                    if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_BZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_BZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > "${SourceCore,,}_BZMigPathFile.txt"
                    fi
                  fi
                else
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "h" ]] || [[ "$filetype1" == "mac" ]]; then
            if [ -d "${SourcePath}" ]; then
              if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
                || [ -f "$SourcePath/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
                || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "/ztpftemp/nk/${SourceCore}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "/ztpftemp/nk/${SourceCore}/${segment1}${version1}.${filetype1}" ]; then
                  include="/ztpftemp/nk/${SourceCore}/${segment1}${version1}.${filetype1}";
                fi
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              elif [[ "$segment1" =~ '#' ]]; then
                hasefile=$(find  "${SourcePath}" -type f | grep "/${segment1}${version1}.${filetype1}"); HC=$?;
                if [ -n "${hasefile// /}" ] && [ "${HC}" -eq 0 ]; then
                  include="${hasefile}"
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              elif [[ "$segment1" =~ '$' ]]; then
                dollorsign=$(find "${SourcePath}" -type f | grep "/${segment1}${version1}.${filetype1}");DC=$?;
                if [ -n "${dollorsign// /}" ] && [ "${DC}" -eq 0 ]; then
                  include="${dollorsign}"
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "bsc" ]]; then
            segment1=${segment1:0:4}
            if [ -f "/ztpfrepos/${SourceCore,,}/src/${segment1:0:1}/${segment1}.mak" ] && [[ "$Recentload" == OK ]]; then
              bsc="/ztpfrepos/${SourceCore,,}/src/${segment1:0:1}/${segment1}.mak"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $bsc" "${SourceCore,,}_BZMigPathFile.txt"
                SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                if [ "$SO" != '' ]; then
                  SO="${SO//\//\/}";
                  sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                if [ "$libSO" != '' ]; then
                  libSO="${libSO//\//\/}";
                  sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                  map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                  map="${map//\//\/}";
                  sed "${count}s/$/ $map/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $bsc" > "${SourceCore,,}_BZMigPathFile.txt"
                SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                if [ "$SO" != '' ]; then
                  SO="${SO//\//\/}";
                  sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                if [ "$libSO" != '' ]; then
                  libSO="${libSO//\//\/}";
                  sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                  map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                  map="${map//\//\/}";
                  sed "${count}s/$/ $map/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "oco" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so" ]; then
              oco="/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          else
            if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
              sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
            else
              touch "${SourceCore,,}_BZMigPathFile.txt"
              echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
            fi
          fi
        elif [[ "${SourceCore}" == 'res' ]] || [[ "${SourceCore}" == 'oss' ]]; then
          if [[ "$filetype1" != "h" ]] && [[ "$filetype1" != "mac" ]] && [[ "$filetype1" != "bsc" ]] && [[ "$filetype1" != "mak" ]] && [[ "$filetype1" != "oco" ]]; then
            if [ -d "${SourcePath}" ]; then
              if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="$SourcePath/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/obj/${segment1}.o" ] && [ "${Recentload}" == OK ]; then
                  obj="/ztpfrepos/${SourceCore,,}/obj/${segment1}.o"
                  if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1}.lst" ]; then
                    lst="/ztpfrepos/${SourceCore,,}/lst/${segment1}.lst"
                    if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                      if [[ "${component}" == "N" ]]; then
                        map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                      else
                        map=""
                      fi
                      if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_BZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "${segment1}.ztpfgivi") )
                        #shellcheck disable=SC2128
                        if [[ "${ztpfgivi}" != '' ]]; then
                          #shellcheck disable=SC2178
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count}s/$/ $ztpfgivi/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                        fi
                        sbtasm=( $(find "/ztpfrepos/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                        if [ "$sbtasm" != '' ]; then
                          sbtasm="${sbtasm//\//\/}";
                          sed "${count}s/$/ $sbtasm/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        sbtlst=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count}s/$/ $sbtlst/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        tpfarc=( $(find "/ztpfrepos/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                        if [ "$tpfarc" != '' ]; then
                          tpfarc="${tpfarc//\//\/}";
                          sed "${count}s/$/ $tpfarc/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                      else
                        touch "${SourceCore,,}_BZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > "${SourceCore,,}_BZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "${segment1}.ztpfgivi") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count}s/$/ $ztpfgivi/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                        fi
                        sbtasm=( $(find "/ztpfrepos/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                        if [ "$sbtasm" != '' ]; then
                          sbtasm="${sbtasm//\//\/}";
                          sed "${count}s/$/ $sbtasm/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        sbtlst=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count}s/$/ $sbtlst/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        tpfarc=( $(find "/ztpfrepos/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                        if [ "$tpfarc" != '' ]; then
                          tpfarc="${tpfarc//\//\/}";
                          sed "${count}s/$/ $tpfarc/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                      fi
                    else
                      if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_BZMigPathFile.txt"
                      else
                        touch "${SourceCore,,}_BZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > "${SourceCore,,}_BZMigPathFile.txt"
                      fi
                    fi
                  else
                    if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_BZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_BZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > "${SourceCore,,}_BZMigPathFile.txt"
                    fi
                  fi
                else
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "h" ]] || [[ "$filetype1" == "mac" ]]; then
            if [ -d "${SourcePath}" ]; then
              if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "$SourcePath/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                fi
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              elif [[ "$segment1" =~ '#' ]]; then
                hasefile=$(find  "${SourcePath}" -type f | grep "/${segment1}${version1}.${filetype1}"); HC=$?;
                if [ -n "${hasefile// /}" ] && [ "${HC}" -eq 0 ]; then
                  include="${hasefile}"
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              elif [[ "$segment1" =~ '$' ]]; then
                dollorsign=$(find "${SourcePath}" -type f | grep "/${segment1}${version1}.${filetype1}");DC=$?;
                if [ -n "${dollorsign// /}" ] && [ "${DC}" -eq 0 ]; then
                  include="${dollorsign}"
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "bsc" ]]; then
            segment1=${segment1:0:4}
            if [ -f "/ztpfrepos/${SourceCore,,}/src/${segment1:0:1}/${segment1}.mak" ] && [[ "$Recentload" == OK ]]; then
              bsc="/ztpfrepos/${SourceCore,,}/src/${segment1:0:1}/${segment1}.mak"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $bsc" "${SourceCore,,}_BZMigPathFile.txt"
                SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                if [ "$SO" != '' ]; then
                  SO="${SO//\//\/}";
                  sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                if [ "$libSO" != '' ]; then
                  libSO="${libSO//\//\/}";
                  sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                  map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                  map="${map//\//\/}";
                  sed "${count}s/$/ $map/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $bsc" > "${SourceCore,,}_BZMigPathFile.txt"
                SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                if [ "$SO" != '' ]; then
                  SO="${SO//\//\/}";
                  sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                if [ "$libSO" != '' ]; then
                  libSO="${libSO//\//\/}";
                  sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                  map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                  map="${map//\//\/}";
                  sed "${count}s/$/ $map/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "oco" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so" ]; then
              oco="/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          else
            if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
              sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
            else
              touch "${SourceCore,,}_BZMigPathFile.txt"
              echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
            fi
          fi
        elif [[ "${SourceCore}" == +($REF_WS_CORE) ]]; then
          if [[ "$filetype1" != "h" ]] && [[ "$filetype1" != "mac" ]] && [[ "$filetype1" != "bsc" ]] && [[ "$filetype1" != "mak" ]] && [[ "$filetype1" != "inc" ]] && [[ "$filetype1" != "oco" ]]; then
            if [ -d "${SourcePath}" ]; then
              if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="$SourcePath/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/obj/${segment1}.o" ] && [ "${Recentload}" == OK ]; then
                  obj="/ztpfrepos/${SourceCore,,}/obj/${segment1}.o"
                  if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1}.lst" ]; then
                    lst="/ztpfrepos/${SourceCore,,}/lst/${segment1}.lst"
                    if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                      if [[ "${component}" == "N" ]]; then
                        map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                      else
                        map=""
                      fi
                      if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_BZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "${segment1}.ztpfgivi") )
                        #shellcheck disable=SC2128
                        if [[ "${ztpfgivi}" != '' ]]; then
                          #shellcheck disable=SC2178
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count}s/$/ $ztpfgivi/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                        fi
                        sbtasm=( $(find "/ztpfrepos/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                        if [ "$sbtasm" != '' ]; then
                          sbtasm="${sbtasm//\//\/}";
                          sed "${count}s/$/ $sbtasm/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        sbtlst=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count}s/$/ $sbtlst/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        tpfarc=( $(find "/ztpfrepos/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                        if [ "$tpfarc" != '' ]; then
                          tpfarc="${tpfarc//\//\/}";
                          sed "${count}s/$/ $tpfarc/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                      else
                        touch "${SourceCore,,}_BZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > "${SourceCore,,}_BZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "${segment1}.ztpfgivi") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count}s/$/ $ztpfgivi/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                        fi
                        sbtasm=( $(find "/ztpfrepos/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                        if [ "$sbtasm" != '' ]; then
                          sbtasm="${sbtasm//\//\/}";
                          sed "${count}s/$/ $sbtasm/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        sbtlst=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count}s/$/ $sbtlst/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        tpfarc=( $(find "/ztpfrepos/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                        if [ "$tpfarc" != '' ]; then
                          tpfarc="${tpfarc//\//\/}";
                          sed "${count}s/$/ $tpfarc/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                      fi
                    else
                      if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_BZMigPathFile.txt"
                      else
                        touch "${SourceCore,,}_BZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > "${SourceCore,,}_BZMigPathFile.txt"
                      fi
                    fi
                  else
                    if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_BZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_BZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > "${SourceCore,,}_BZMigPathFile.txt"
                    fi
                  fi
                else
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "h" ]] || [[ "$filetype1" == "mac" ]]; then
            if [ -d "${SourcePath}" ]; then
              if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "$SourcePath/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                fi
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              elif [[ "$segment1" =~ '#' ]]; then
                hasefile=$(find  "${SourcePath}" -type f | grep "/${segment1}${version1}.${filetype1}"); HC=$?;
                if [ -n "${hasefile// /}" ] && [ "${HC}" -eq 0 ]; then
                  include="${hasefile}"
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              elif [[ "$segment1" =~ '$' ]]; then
                dollorsign=$(find "${SourcePath}" -type f | grep "/${segment1}${version1}.${filetype1}");DC=$?;
                if [ -n "${dollorsign// /}" ] && [ "${DC}" -eq 0 ]; then
                  include="${dollorsign}"
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "inc" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/sabrincl/${segment1}.inc" ]; then
              sabinc="/ztpfrepos/${SourceCore,,}/sabrincl/${segment1}.inc"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $sabinc" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $sabinc" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "bsc" ]]; then
            segment1=${segment1:0:4}
            if [ -f "/ztpfrepos/${SourceCore,,}/src/${segment1:0:1}/${segment1}.mak" ] && [[ "$Recentload" == OK ]]; then
              bsc="/ztpfrepos/${SourceCore,,}/src/${segment1:0:1}/${segment1}.mak"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $bsc" "${SourceCore,,}_BZMigPathFile.txt"
                SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                if [ "$SO" != '' ]; then
                  SO="${SO//\//\/}";
                  sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                if [ "$libSO" != '' ]; then
                  libSO="${libSO//\//\/}";
                  sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                  map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                  map="${map//\//\/}";
                  sed "${count}s/$/ $map/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $bsc" > "${SourceCore,,}_BZMigPathFile.txt"
                SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                if [ "$SO" != '' ]; then
                  SO="${SO//\//\/}";
                  sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                if [ "$libSO" != '' ]; then
                  libSO="${libSO//\//\/}";
                  sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                  map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                  map="${map//\//\/}";
                  sed "${count}s/$/ $map/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "oco" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so" ]; then
              oco="/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          else
            if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
              sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
            else
              touch "${SourceCore,,}_BZMigPathFile.txt"
              echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
            fi
          fi
        elif [[ "${SourceCore}" == "air" ]]; then
          SourcePath1="/ztpfrepos/tpfdl/cc/res";                               # Additional check for res.
          if [[ "$filetype1" != "h" ]] && [[ "$filetype1" != "mac" ]] && [[ "$filetype1" != "bsc" ]] && [[ "$filetype1" != "mak" ]]; then
            if [ -d "${SourcePath1}" ] && [ -d "${SourcePath}" ]; then
              if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
                || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/obj/${segment1}.o" ] && [ "${Recentload}" == OK ]; then
                  obj="/ztpfrepos/${SourceCore,,}/obj/${segment1}.o"
                  if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1}.lst" ]; then
                    lst="/ztpfrepos/${SourceCore,,}/lst/${segment1}.lst"
                    if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                      if [[ "${component}" == "N" ]]; then
                        map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                      else
                        map=""
                      fi
                      if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_BZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "${segment1}.ztpfgivi") )
                        #shellcheck disable=SC2128
                        if [[ "${ztpfgivi}" != '' ]]; then
                          #shellcheck disable=SC2178
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count}s/$/ $ztpfgivi/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                        fi
                        sbtasm=( $(find "/ztpfrepos/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                        if [ "$sbtasm" != '' ]; then
                          sbtasm="${sbtasm//\//\/}";
                          sed "${count}s/$/ $sbtasm/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        sbtlst=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count}s/$/ $sbtlst/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        tpfarc=( $(find "/ztpfrepos/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                        if [ "$tpfarc" != '' ]; then
                          tpfarc="${tpfarc//\//\/}";
                          sed "${count}s/$/ $tpfarc/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                      else
                        touch "${SourceCore,,}_BZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > "${SourceCore,,}_BZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "${segment1}.ztpfgivi") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count}s/$/ $ztpfgivi/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                          fi
                        fi
                        sbtasm=( $(find "/ztpfrepos/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                        if [ "$sbtasm" != '' ]; then
                          sbtasm="${sbtasm//\//\/}";
                          sed "${count}s/$/ $sbtasm/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        sbtlst=( $(find "/ztpfrepos/${SourceCore,,}/lst/" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count}s/$/ $sbtlst/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                        tpfarc=( $(find "/ztpfrepos/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                        if [ "$tpfarc" != '' ]; then
                          tpfarc="${tpfarc//\//\/}";
                          sed "${count}s/$/ $tpfarc/" -i "${SourceCore,,}_BZMigPathFile.txt"
                        fi
                      fi
                    else
                      if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_BZMigPathFile.txt"
                      else
                        touch "${SourceCore,,}_BZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > "${SourceCore,,}_BZMigPathFile.txt"
                      fi
                    fi
                  else
                    if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_BZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_BZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > "${SourceCore,,}_BZMigPathFile.txt"
                    fi
                  fi
                else
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "h" ]] || [[ "$filetype1" == "mac" ]]; then
            if [ -d "${SourcePath1}" ] && [ -d "${SourcePath}" ] ; then
              if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
               || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  include="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                fi
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              elif [[ "$segment1" =~ '#' ]]; then
                hasefile=$(find  "${SourcePath1}" -type f | grep "/${segment1}${version1}.${filetype1}"); HC=$?;
                if [ -z "${hasefile}" ]; then
                  hasefile=$(find  "${SourcePath}" -type f | grep "/${segment1}${version1}.${filetype1}"); HC=$?;       # Exceptional Logic for AIR
                fi
                if [ -n "${hasefile[*]}" ] && [ "${HC}" -eq 0 ]; then
                  include="${hasefile}"
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              elif [[ "$segment1" =~ '$' ]]; then
                dollorsign=$(find "${SourcePath1}" -type f | grep "/${segment1}${version1}.${filetype1}");DC=$?;
                if [ -z "${dollorsign}" ] && [ "${DC}" -eq 0 ]; then
                  dollorsign=$(find "${SourcePath}" -type f | grep "/${segment1}${version1}.${filetype1}");DC=$?;       # Exceptional Logic for AIR
                fi
                if [ -n "${dollorsign// /}" ] && [ "${DC}" -eq 0 ]; then
                  include="${dollorsign}"
                  if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" "${SourceCore,,}_BZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_BZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $include" > "${SourceCore,,}_BZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_BZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "bsc" ]]; then
            segment1=${segment1:0:4}
            if [ -f "/ztpfrepos/${SourceCore,,}/src/${segment1:0:1}/${segment1}.mak" ] && [[ "$Recentload" == OK ]]; then
              bsc="/ztpfrepos/${SourceCore,,}/src/${segment1:0:1}/${segment1}.mak"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $bsc" "${SourceCore,,}_BZMigPathFile.txt"
                SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                if [ "$SO" != '' ]; then
                  SO="${SO//\//\/}";
                  sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                if [ "$libSO" != '' ]; then
                  libSO="${libSO//\//\/}";
                  sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                  map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                  map="${map//\//\/}";
                  sed "${count}s/$/ $map/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $bsc" > "${SourceCore,,}_BZMigPathFile.txt"
                SO=( $(find "/ztpfrepos/${SourceCore,,}/load/" -type f -name "${segment1^^}.so") )
                if [ "$SO" != '' ]; then
                  SO="${SO//\//\/}";
                  sed "${count}s/$/ $SO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                libSO=( $(find "/ztpfrepos/${SourceCore,,}/lib/" -type f -name "lib${segment1^^}.so") )
                if [ "$libSO" != '' ]; then
                  libSO="${libSO//\//\/}";
                  sed "${count}s/$/ $libSO/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
                if [ -f "/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                  map="/ztpfrepos/${SourceCore,,}/lst/${segment1^^}.map"
                  map="${map//\//\/}";
                  sed "${count}s/$/ $map/" -i "${SourceCore,,}_BZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "oco" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so" ]; then
              oco="/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so"
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
              else
                touch "${SourceCore,,}_BZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
              fi
            fi
          else
            if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
              sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_BZMigPathFile.txt"
            else
              touch "${SourceCore,,}_BZMigPathFile.txt"
              echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_BZMigPathFile.txt"
            fi
          fi
        fi
        if [ -n "${UpdateInd// /}" ] && [[ "$UpdateInd" == A ]] || [[ "$UpdateInd" == R ]] || [[ "$UpdateInd" == D ]]; then
          sed "${count}s/$/ $UpdateInd/" -i "${SourceCore,,}_BZMigPathFile.txt"
        fi
        ProgressBar "${count}" "${_endbefore}" "MCF-BEFORE-CUTOVER:${SourceCore^^}"
      done < ."${SourceCore,,}_Beforedate"
    fi
    if [ -f "${LCLSYS_PATH}/${SourceCore,,}/tools/.${SourceCore,,}_Afterdate" ]; then
      count1=0;
      # shellcheck disable=SC2002
      _endafter=$(cat "${LCLSYS_PATH}/${SourceCore,,}/tools/.${SourceCore,,}_Afterdate" | wc -l)
      while read -r line
      do
        UpdateInd=""
        segment=${line:0:8}
        segment1="$(echo "$segment" | tr -d ' ')"
        version=${line:8:2}
        version1="$(echo "$version" | tr -d ' ')"
        filetype=${line:12:3}
        filetype1="$(echo "$filetype" | tr -d ' ')"
        component=${line:16:1}
        FuncArea=${line:18:5}
        FuncArea1="$(echo "$FuncArea" | tr -d ' ')"
        status=${line:23:1}
        Date=${line:25:8}
        UpdateInd=${line:316:1}
        Userid=${line:34:8}
        Userid1="$(echo "$Userid" | tr -d ' ')"
        if [ "$Userid1" == '' ]; then
            Userid="_NOUSER_"
        fi
        LoadPath=${line:43:14}
        LoadPath1="$(echo "$LoadPath" | tr -d ' ')"
        if [ "$LoadPath1" == '' ]; then
          LoadPath="_NO_PLAN_NAME_"
        fi
        count1=$((count1+1));
        if [[ "${SourceCore}" == "air" ]]; then
          if [[ "$filetype1" == "h" ]] || [[ "$filetype1" == "mac" ]] || [[ "$filetype1" == "bsc" ]] || [[ "$filetype1" == "mak" ]]; then
            if [ "$LoadPath1" != '' ]; then
              if [[ "$filetype1" == "mac" ]]; then
                if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" ]; then
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/macro/${segment1}.${filetype1}" ]; then
                    mac="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/macro/${segment1}.${filetype1}"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  elif [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/macro/${segment1}.${filetype1}.PULL" ]; then
                    mac="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/macro/${segment1}.${filetype1}.PULL"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
                      || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    fi
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
                    || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  fi
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              elif [[ "$filetype1" == "h" ]]; then
                if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" ]; then
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/include/${segment1}.${filetype1}" ]; then
                    header="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/include/${segment1}.${filetype1}"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  elif [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/include/${segment1}.${filetype1}.PULL" ]; then
                    header="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/include/${segment1}.${filetype1}.PULL"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
                    || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    fi
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                     sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
                  || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  fi
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              elif [[ "$filetype1" == "mak" ]] || [[ "$filetype1" == "bsc" ]]; then
                if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" ]; then
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                    mak="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1:0:4}.mak"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
                      segment1=${segment1:0:4}
                      out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out") )
                      if [ "$out" != '' ]; then
                        out="${out//\//\/}";
                        sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err") )
                      if [ "$err" != '' ]; then
                        err="${err//\//\/}";
                        sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so") )
                      if [ "$SO" != '' ]; then
                        SO="${SO//\//\/}";
                        sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so") )
                      if [ "$libSO" != '' ]; then
                        libSO="${libSO//\//\/}";
                        sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map"
                        map="${map//\//\/}";
                        sed "${count1}s/$/ $map/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > "${SourceCore,,}_AZMigPathFile.txt"
                      segment1=${segment1:0:4}
                      out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out") )
                      if [ "$out" != '' ]; then
                        out="${out//\//\/}";
                        sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err") )
                      if [ "$err" != '' ]; then
                        err="${err//\//\/}";
                        sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so") )
                      if [ "$SO" != '' ]; then
                        SO="${SO//\//\/}";
                        sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so") )
                      if [ "$libSO" != '' ]; then
                        libSO="${libSO//\//\/}";
                        sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map"
                        map="${map//\//\/}";
                        sed "${count1}s/$/ $map/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    fi
                  elif [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1:0:4}.mak.PULL" ]; then
                    mak="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1:0:4}.mak.PULL"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
                      segment1=${segment1:0:4}
                      out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out.PULL") )
                      if [ "$out" != '' ]; then
                        out="${out//\//\/}";
                        sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err.PULL") )
                      if [ "$err" != '' ]; then
                        err="${err//\//\/}";
                        sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so.PULL") )
                      if [ "$SO" != '' ]; then
                        SO="${SO//\//\/}";
                        sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so.PULL") )
                      if [ "$libSO" != '' ]; then
                        libSO="${libSO//\//\/}";
                        sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL" ]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL"
                        map="${map//\//\/}";
                        sed "${count1}s/$/ $map/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > "${SourceCore,,}_AZMigPathFile.txt"
                      segment1=${segment1:0:4}
                      out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out.PULL") )
                      if [ "$out" != '' ]; then
                        out="${out//\//\/}";
                        sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err.PULL") )
                      if [ "$err" != '' ]; then
                        err="${err//\//\/}";
                        sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so.PULL") )
                      if [ "$SO" != '' ]; then
                        SO="${SO//\//\/}";
                        sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so.PULL") )
                      if [ "$libSO" != '' ]; then
                        libSO="${libSO//\//\/}";
                        sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL" ]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL"
                        map="${map//\//\/}";
                        sed "${count1}s/$/ $map/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    fi
                  elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1:0:4}.mak" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1:0:4}.mak" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                    if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                      mak="${SourcePath}/prod/${segment1:0:1}/${segment1:0:4}.mak"
                    elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                      mak="${SourcePath}/bkup/${segment1:0:1}/${segment1:0:4}.mak"
                    elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                      mak="${SourcePath}/arch/${segment1:0:1}/${segment1:0:4}.mak"
                    fi
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.mak" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.mak" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.mak" ] \
                  || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.mak" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.mak" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                  if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                    mak="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.mak"
                  elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                    mak="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.mak"
                  elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                    mak="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.mak"
                  elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                    mak="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.mak"
                  elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                    mak="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.mak"
                  elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                    mak="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.mak"
                  fi
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_AZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          elif [[ "${SourceCore,,}" == +($REF_WS_CORE) ]] && [[ "$filetype1" == "inc" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/sabrincl/${segment1}.inc" ]; then
              sabinc="/ztpfrepos/${SourceCore,,}/sabrincl/${segment1}.inc"
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $sabinc" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $sabinc" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            else
             if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "oco" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so" ]; then
              oco="/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so"
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          elif [ "$LoadPath1" != '' ]; then
            if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" ]; then
              if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1}.${filetype1}" ]; then
                src="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/src/${segment1:0:1}/${segment1}.${filetype1}"
                if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/obj/${segment1}.o" ]; then
                  obj="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/obj/${segment1}.o"
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1}.lst" ]; then
                    lst="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/lst/${segment1}.lst"
                    if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                      if [[ "$component" == "N" ]]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map"
                      else
                        map=""
                      fi
                      if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_AZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1}.ztpfgivi") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count1}s/$/ $ztpfgivi/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out") )
                          if [ "$out" != '' ]; then
                            out="${out//\//\/}";
                            sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err") )
                          if [ "$err" != '' ]; then
                            err="${err//\//\/}";
                            sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm" ]; then
                          sbtasm=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                          if [ "$sbtasm" != '' ]; then
                            sbtasm="${sbtasm//\//\/}";
                            sed "${count1}s/$/ $sbtasm/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        sbtlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count1}s/$/ $sbtlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        tpfarlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.tpfarlst") )
                        if [ "$tpfarlst" != '' ]; then
                          tpfarlst="${tpfarlst//\//\/}";
                          sed "${count1}s/$/ $tpfarlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" ]; then
                          tpfarc=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                          if [ "$tpfarc" != '' ]; then
                            tpfarc="${tpfarc//\//\/}";
                            sed "${count1}s/$/ $tpfarc/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                      else
                        touch "${SourceCore,,}_AZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > "${SourceCore,,}_AZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1}.ztpfgivi") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count1}s/$/ $ztpfgivi/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out") )
                          if [ "$out" != '' ]; then
                            out="${out//\//\/}";
                            sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err") )
                          if [ "$err" != '' ]; then
                            err="${err//\//\/}";
                            sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm" ]; then
                          sbtasm=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                          if [ "$sbtasm" != '' ]; then
                            sbtasm="${sbtasm//\//\/}";
                            sed "${count1}s/$/ $sbtasm/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        sbtlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count1}s/$/ $sbtlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        tpfarlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.tpfarlst") )
                        if [ "$tpfarlst" != '' ]; then
                          tpfarlst="${tpfarlst//\//\/}";
                          sed "${count1}s/$/ $tpfarlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" ]; then
                          tpfarc=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                          if [ "$tpfarc" != '' ]; then
                            tpfarc="${tpfarc//\//\/}";
                            sed "${count1}s/$/ $tpfarc/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                      fi
                    else
                      if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_AZMigPathFile.txt"
                      else
                        touch "${SourceCore,,}_AZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              elif [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1}.${filetype1}.PULL" ]; then
                src="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/src/${segment1:0:1}/${segment1}.${filetype1}.PULL"
                if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/obj/${segment1}.o.PULL" ]; then
                  obj="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/obj/${segment1}.o.PULL"
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1}.lst.PULL" ]; then
                    lst="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/lst/${segment1}.lst.PULL"
                    if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL" ]; then
                      if [[ "$component" == "N" ]]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL"
                      else
                        map=""
                      fi
                      if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_AZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1}.ztpfgivi.PULL") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count1}s/$/ $ztpfgivi/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out.PULL") )
                          if [ "$out" != '' ]; then
                            out="${out//\//\/}";
                            sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err.PULL") )
                          if [ "$err" != '' ]; then
                            err="${err//\//\/}";
                            sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so.PULL") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so.PULL") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm" ]; then
                          sbtasm=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm.PULL") )
                          if [ "$sbtasm" != '' ]; then
                            sbtasm="${sbtasm//\//\/}";
                            sed "${count1}s/$/ $sbtasm/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        sbtlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.sbtlst.PULL") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count1}s/$/ $sbtlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        tpfarlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.tpfarlst.PULL") )
                        if [ "$tpfarlst" != '' ]; then
                          tpfarlst="${tpfarlst//\//\/}";
                          sed "${count1}s/$/ $tpfarlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" ]; then
                          tpfarc=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c.PULL") )
                          if [ "$tpfarc" != '' ]; then
                            tpfarc="${tpfarc//\//\/}";
                            sed "${count1}s/$/ $tpfarc/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                      else
                        touch "${SourceCore,,}_AZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > "${SourceCore,,}_AZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1}.ztpfgivi.PULL") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count1}s/$/ $ztpfgivi/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out.PULL") )
                          if [ "$out" != '' ]; then
                            out="${out//\//\/}";
                            sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err.PULL") )
                          if [ "$err" != '' ]; then
                            err="${err//\//\/}";
                            sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so.PULL") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so.PULL") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm" ]; then
                          sbtasm=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm.PULL") )
                          if [ "$sbtasm" != '' ]; then
                            sbtasm="${sbtasm//\//\/}";
                            sed "${count1}s/$/ $sbtasm/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        sbtlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.sbtlst.PULL") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count1}s/$/ $sbtlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        tpfarlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.tpfarlst.PULL") )
                        if [ "$tpfarlst" != '' ]; then
                          tpfarlst="${tpfarlst//\//\/}";
                          sed "${count1}s/$/ $tpfarlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" ]; then
                          tpfarc=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c.PULL") )
                          if [ "$tpfarc" != '' ]; then
                            tpfarc="${tpfarc//\//\/}";
                            sed "${count1}s/$/ $tpfarc/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                      fi
                    else
                      if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_AZMigPathFile.txt"
                      else
                        touch "${SourceCore,,}_AZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
                || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                fi
                if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                  sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_AZMigPathFile.txt"
                  echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
                fi
              else
                if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_AZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                fi
              fi
            elif [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
              || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
              if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              fi
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          elif [ "$LoadPath1" == '' ]; then
            if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] \
              || [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
              if [ -f "${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath1}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath1}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath1}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              fi
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          else
            if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
              sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
            else
              touch "${SourceCore,,}_AZMigPathFile.txt"
              echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
            fi
          fi
          if [ -n "${UpdateInd// /}" ] && [[ "$UpdateInd" == A ]] || [[ "$UpdateInd" == R ]] || [[ "$UpdateInd" == D ]]; then
            sed "${count1}s/$/ $UpdateInd/" -i "${SourceCore,,}_AZMigPathFile.txt"
          fi
        else
          if [[ "$filetype1" == "h" ]] || [[ "$filetype1" == "mac" ]] || [[ "$filetype1" == "bsc" ]] || [[ "$filetype1" == "mak" ]]; then
            if [ "$LoadPath1" != '' ]; then
              if [[ "$filetype1" == "mac" ]]; then
                if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" ]; then
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/macro/${segment1}.${filetype1}" ]; then
                    mac="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/macro/${segment1}.${filetype1}"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  elif [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/macro/${segment1}.${filetype1}.PULL" ]; then
                    mac="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/macro/${segment1}.${filetype1}.PULL"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      mac="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    fi
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    mac="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  fi
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mac" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              elif [[ "$filetype1" == "h" ]]; then
                if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" ]; then
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/include/${segment1}.${filetype1}" ]; then
                    header="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/include/${segment1}.${filetype1}"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  elif [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/include/${segment1}.${filetype1}.PULL" ]; then
                    header="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/include/${segment1}.${filetype1}.PULL"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                      header="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                    fi
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                     sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                    header="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                  fi
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $header" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              elif [[ "$filetype1" == "mak" ]] || [[ "$filetype1" == "bsc" ]]; then
                if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" ]; then
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                    mak="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1:0:4}.mak"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
                      segment1=${segment1:0:4}
                      out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out") )
                      if [ "$out" != '' ]; then
                        out="${out//\//\/}";
                        sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err") )
                      if [ "$err" != '' ]; then
                        err="${err//\//\/}";
                        sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so") )
                      if [ "$SO" != '' ]; then
                        SO="${SO//\//\/}";
                        sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so") )
                      if [ "$libSO" != '' ]; then
                        libSO="${libSO//\//\/}";
                        sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map"
                        map="${map//\//\/}";
                        sed "${count1}s/$/ $map/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > "${SourceCore,,}_AZMigPathFile.txt"
                      segment1=${segment1:0:4}
                      out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out") )
                      if [ "$out" != '' ]; then
                        out="${out//\//\/}";
                        sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err") )
                      if [ "$err" != '' ]; then
                        err="${err//\//\/}";
                        sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so") )
                      if [ "$SO" != '' ]; then
                        SO="${SO//\//\/}";
                        sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so") )
                      if [ "$libSO" != '' ]; then
                        libSO="${libSO//\//\/}";
                        sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map"
                        map="${map//\//\/}";
                        sed "${count1}s/$/ $map/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    fi
                  elif [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1:0:4}.mak.PULL" ]; then
                    mak="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1:0:4}.mak.PULL"
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
                      segment1=${segment1:0:4}
                      out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out.PULL") )
                      if [ "$out" != '' ]; then
                        out="${out//\//\/}";
                        sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err.PULL") )
                      if [ "$err" != '' ]; then
                        err="${err//\//\/}";
                        sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so.PULL") )
                      if [ "$SO" != '' ]; then
                        SO="${SO//\//\/}";
                        sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so.PULL") )
                      if [ "$libSO" != '' ]; then
                        libSO="${libSO//\//\/}";
                        sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL" ]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL"
                        map="${map//\//\/}";
                        sed "${count1}s/$/ $map/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > "${SourceCore,,}_AZMigPathFile.txt"
                      segment1=${segment1:0:4}
                      out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out.PULL") )
                      if [ "$out" != '' ]; then
                        out="${out//\//\/}";
                        sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err.PULL") )
                      if [ "$err" != '' ]; then
                        err="${err//\//\/}";
                        sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so.PULL") )
                      if [ "$SO" != '' ]; then
                        SO="${SO//\//\/}";
                        sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so.PULL") )
                      if [ "$libSO" != '' ]; then
                        libSO="${libSO//\//\/}";
                        sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                      if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL" ]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL"
                        map="${map//\//\/}";
                        sed "${count1}s/$/ $map/" -i "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    fi
                  elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1:0:4}.mak" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1:0:4}.mak" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                    if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                      mak="${SourcePath}/prod/${segment1:0:1}/${segment1:0:4}.mak"
                    elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                      mak="${SourcePath}/bkup/${segment1:0:1}/${segment1:0:4}.mak"
                    elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1:0:4}.mak" ]; then
                      mak="${SourcePath}/arch/${segment1:0:1}/${segment1:0:4}.mak"
                    fi
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.mak" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.mak" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                  if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                      mak="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.mak"
                    elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                      mak="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.mak"
                    elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.mak" ]; then
                      mak="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.mak"
                    fi
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $mak" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              else
                if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_AZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                fi
              fi
            else
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          elif [[ "${SourceCore,,}" == +($REF_WS_CORE) ]] && [[ "$filetype1" == "inc" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/sabrincl/${segment1}.inc" ]; then
              sabinc="/ztpfrepos/${SourceCore,,}/sabrincl/${segment1}.inc"
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $sabinc" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $sabinc" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            else
             if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          elif [[ "$filetype1" == "oco" ]]; then
            if [ -f "/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so" ]; then
              oco="/ztpfrepos/${SourceCore,,}/oco/load/${segment1^^}.so"
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $oco" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          elif [ "$LoadPath1" != '' ]; then
            if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" ]; then
              if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1}.${filetype1}" ]; then
                src="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/src/${segment1:0:1}/${segment1}.${filetype1}"
                if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/obj/${segment1}.o" ]; then
                  obj="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/obj/${segment1}.o"
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1}.lst" ]; then
                    lst="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/lst/${segment1}.lst"
                    if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map" ]; then
                      if [[ "$component" == "N" ]]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map"
                      else
                        map=""
                      fi
                      if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_AZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1}.ztpfgivi") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count1}s/$/ $ztpfgivi/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out") )
                          if [ "$out" != '' ]; then
                            out="${out//\//\/}";
                            sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err") )
                          if [ "$err" != '' ]; then
                            err="${err//\//\/}";
                            sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm" ]; then
                          sbtasm=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                          if [ "$sbtasm" != '' ]; then
                            sbtasm="${sbtasm//\//\/}";
                            sed "${count1}s/$/ $sbtasm/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        sbtlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count1}s/$/ $sbtlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        tpfarlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.tpfarlst") )
                        if [ "$tpfarlst" != '' ]; then
                          tpfarlst="${tpfarlst//\//\/}";
                          sed "${count1}s/$/ $tpfarlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" ]; then
                          tpfarc=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                          if [ "$tpfarc" != '' ]; then
                            tpfarc="${tpfarc//\//\/}";
                            sed "${count1}s/$/ $tpfarc/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                      else
                        touch "${SourceCore,,}_AZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > "${SourceCore,,}_AZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1}.ztpfgivi") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count1}s/$/ $ztpfgivi/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out") )
                          if [ "$out" != '' ]; then
                            out="${out//\//\/}";
                            sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err") )
                          if [ "$err" != '' ]; then
                            err="${err//\//\/}";
                            sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm" ]; then
                          sbtasm=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm") )
                          if [ "$sbtasm" != '' ]; then
                            sbtasm="${sbtasm//\//\/}";
                            sed "${count1}s/$/ $sbtasm/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        sbtlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.sbtlst") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count1}s/$/ $sbtlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        tpfarlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.tpfarlst") )
                        if [ "$tpfarlst" != '' ]; then
                          tpfarlst="${tpfarlst//\//\/}";
                          sed "${count1}s/$/ $tpfarlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" ]; then
                          tpfarc=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c") )
                          if [ "$tpfarc" != '' ]; then
                            tpfarc="${tpfarc//\//\/}";
                            sed "${count1}s/$/ $tpfarc/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                      fi
                    else
                      if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_AZMigPathFile.txt"
                      else
                        touch "${SourceCore,,}_AZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              elif [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/src/${segment1:0:1}/${segment1}.${filetype1}.PULL" ]; then
                src="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/src/${segment1:0:1}/${segment1}.${filetype1}.PULL"
                if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/obj/${segment1}.o.PULL" ]; then
                  obj="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/obj/${segment1}.o.PULL"
                  if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1}.lst.PULL" ]; then
                    lst="/ztpfrepos/loads/${LoadPath1}/${SourceCore}/lst/${segment1}.lst.PULL"
                    if [ -f "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL" ]; then
                      if [[ "$component" == "N" ]]; then
                        map="/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/lst/${segment1^^}.map.PULL"
                      else
                        map=""
                      fi
                      if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" "${SourceCore,,}_AZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1}.ztpfgivi.PULL") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count1}s/$/ $ztpfgivi/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out.PULL") )
                          if [ "$out" != '' ]; then
                            out="${out//\//\/}";
                            sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err.PULL") )
                          if [ "$err" != '' ]; then
                            err="${err//\//\/}";
                            sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so.PULL") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so.PULL") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm" ]; then
                          sbtasm=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm.PULL") )
                          if [ "$sbtasm" != '' ]; then
                            sbtasm="${sbtasm//\//\/}";
                            sed "${count1}s/$/ $sbtasm/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        sbtlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.sbtlst.PULL") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count1}s/$/ $sbtlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        tpfarlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.tpfarlst.PULL") )
                        if [ "$tpfarlst" != '' ]; then
                          tpfarlst="${tpfarlst//\//\/}";
                          sed "${count1}s/$/ $tpfarlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" ]; then
                          tpfarc=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c.PULL") )
                          if [ "$tpfarc" != '' ]; then
                            tpfarc="${tpfarc//\//\/}";
                            sed "${count1}s/$/ $tpfarc/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                      else
                        touch "${SourceCore,,}_AZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst $map" > "${SourceCore,,}_AZMigPathFile.txt"
                        segment1=${segment1:0:4}
                        ztpfgivi=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1}.ztpfgivi.PULL") )
                        if [ "$ztpfgivi" != '' ]; then
                          ztpfgivi="${ztpfgivi//\//\/}";
                          sed "${count1}s/$/ $ztpfgivi/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [[ "$component" == "N" ]]; then
                          out=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.out.PULL") )
                          if [ "$out" != '' ]; then
                            out="${out//\//\/}";
                            sed "${count1}s/$/ $out/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          err=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.err.PULL") )
                          if [ "$err" != '' ]; then
                            err="${err//\//\/}";
                            sed "${count1}s/$/ $err/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          SO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "${segment1^^}.so.PULL") )
                          if [ "$SO" != '' ]; then
                            SO="${SO//\//\/}";
                            sed "${count1}s/$/ $SO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                          libSO=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "lib${segment1^^}.so.PULL") )
                          if [ "$libSO" != '' ]; then
                            libSO="${libSO//\//\/}";
                            sed "${count1}s/$/ $libSO/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm" ]; then
                          sbtasm=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/sbtasm/" -type f -name "${segment1}.asm.PULL") )
                          if [ "$sbtasm" != '' ]; then
                            sbtasm="${sbtasm//\//\/}";
                            sed "${count1}s/$/ $sbtasm/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                        sbtlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.sbtlst.PULL") )
                        if [ "$sbtlst" != '' ]; then
                          sbtlst="${sbtlst//\//\/}";
                          sed "${count1}s/$/ $sbtlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        tpfarlst=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}" -type f -name "*${segment1}.tpfarlst.PULL") )
                        if [ "$tpfarlst" != '' ]; then
                          tpfarlst="${tpfarlst//\//\/}";
                          sed "${count1}s/$/ $tpfarlst/" -i "${SourceCore,,}_AZMigPathFile.txt"
                        fi
                        if [ -d "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" ]; then
                          tpfarc=( $(find "/ztpfrepos/loads/${LoadPath1}/${SourceCore,,}/tpfarc" -type f -name "${segment1}.c.PULL") )
                          if [ "$tpfarc" != '' ]; then
                            tpfarc="${tpfarc//\//\/}";
                            sed "${count1}s/$/ $tpfarc/" -i "${SourceCore,,}_AZMigPathFile.txt"
                          fi
                        fi
                      fi
                    else
                      if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                        sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" "${SourceCore,,}_AZMigPathFile.txt"
                      else
                        touch "${SourceCore,,}_AZMigPathFile.txt"
                        echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj $lst" > "${SourceCore,,}_AZMigPathFile.txt"
                      fi
                    fi
                  else
                    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                      sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" "${SourceCore,,}_AZMigPathFile.txt"
                    else
                      touch "${SourceCore,,}_AZMigPathFile.txt"
                      echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src $obj" > "${SourceCore,,}_AZMigPathFile.txt"
                    fi
                  fi
                else
                  if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                    sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
                  else
                    touch "${SourceCore,,}_AZMigPathFile.txt"
                    echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
                  fi
                fi
              elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                  src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
                fi
                if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                  sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_AZMigPathFile.txt"
                  echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
                fi
              else
                if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                  sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
                else
                  touch "${SourceCore,,}_AZMigPathFile.txt"
                  echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
                fi
              fi
            elif [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
              if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              fi
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          elif [ "$LoadPath1" == '' ]; then
            if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ] || [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
              if [ -f "${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/prod/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/bkup/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              elif [ -f "${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}" ]; then
                src="${SourcePath}/arch/${segment1:0:1}/${segment1}${version1}.${filetype1}"
              fi
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "OK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid $src" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            else
              if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
                sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
              else
                touch "${SourceCore,,}_AZMigPathFile.txt"
                echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
              fi
            fi
          else
            if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
              sed -i -e "$ a NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" "${SourceCore,,}_AZMigPathFile.txt"
            else
              touch "${SourceCore,,}_AZMigPathFile.txt"
              echo "NK $status $FuncArea $Date $LoadPath $segment $version $filetype $Userid" > "${SourceCore,,}_AZMigPathFile.txt"
            fi
          fi
          if [ -n "${UpdateInd// /}" ] && [[ "$UpdateInd" == A ]] || [[ "$UpdateInd" == R ]] || [[ "$UpdateInd" == D ]]; then
            sed "${count1}s/$/ $UpdateInd/" -i "${SourceCore,,}_AZMigPathFile.txt"
          fi
        fi
        ProgressBar "${count1}" "${_endafter}" "MCF-AFTER-CUTOVER:${SourceCore^^}"
      done < ."${SourceCore,,}_Afterdate"
    fi
      sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:MCF analysis completed RC:$RC"
      echo -e "INFO: MCF analysis completed."
    if [ -f "${SourceCore,,}_BZMigPathFile.txt" ]; then
      sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:Git migraiton input script path for before cut-over date - ${zLockDate} RC:$RC"
      echo -e "INFO: Git migraiton input script path for before cut-over date - ${zLockDate}"
      cat "${SourceCore,,}_BZMigPathFile.txt" > "${SourceCore,,}_migrate_scm.txt"
      sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:PACKAGES FOUND -$(awk '{print $3}' "${SourceCore,,}_BZMigPathFile.txt" |sort |uniq|tr '\n' ' ') RC:$RC"
      echo -e "INFO PACKAGES FOUND -$(awk '{print $3}' "${SourceCore,,}_BZMigPathFile.txt" |sort |uniq|tr '\n' ' ')"
    fi
    if [ -f "${SourceCore,,}_AZMigPathFile.txt" ]; then
      sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:Git migraiton input script path for after cut-over date - ${zLockDate} RC:$RC"
      echo -e "INFO: Git migraiton input script path for after cut-over date - ${zLockDate}"
      cat "${SourceCore,,}_AZMigPathFile.txt" >> "${SourceCore,,}_migrate_scm.txt"
      sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:PACKAGES FOUND -$(awk '{print $3}' "${SourceCore,,}"_AZMigPathFile.txt |sort |uniq|tr '\n' ' ') RC:$RC"
      sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:INPUT PATH - ${LCLSYS_PATH}/${SourceCore}/tools/${SourceCore,,}_migrate_scm.txt RC:$RC"
      echo -e "INFO PACKAGES FOUND -$(awk '{print $3}' "${SourceCore,,}_AZMigPathFile.txt" |sort |uniq|tr '\n' ' ')"
      echo -e "INFO: INPUT PATH - ${LCLSYS_PATH}/${SourceCore}/tools/${SourceCore,,}_migrate_scm.txt"
    fi
    if [ -f "${SourceCore,,}_migrate_scm.txt" ]; then
      sort -k1.11,1.18 "${SourceCore,,}_migrate_scm.txt" > "${SourceCore,,}_migrate_scm_new.txt"
      mv "${SourceCore,,}_migrate_scm_new.txt" "${SourceCore,,}_migrate_scm.txt"
      #---------------------------------------------------------------------#
      ztpftemp=($(find "${tempdata}" -type f))
      if [ -n "${ztpftemp// /}" ]; then
        for((i=0; i<${#ztpftemp[*]}; i++));
        do
          ztpfseg="${ztpftemp[i]##*/}"
          ztpfsegline="$(grep -n "/${ztpfseg}" "${SourceCore,,}_migrate_scm.txt" | tail -1 |awk -F : '{print $1}')"   # line number scm  migrate
          ztpfsegcol="$(grep -n "/${ztpfseg}" "${SourceCore,,}_migrate_scm.txt" | tail -1 | tr -s ' ' '\n' | nl -nln| grep "${ztpfseg}" | cut -f1)" #---colummn number
          if [ -n "${ztpfsegline// /}" ] && [ -n "${ztpfsegcol// /}" ]; then
            ztpfsegcut="$(grep -n "/${ztpfseg}" "${SourceCore,,}_migrate_scm.txt" | tr -s ' ' | tail -1| cut -d" " -f${ztpfsegcol})"  #----column file path
            sed -i "${ztpfsegline}s#${ztpfsegcut} #${ztpftemp[i]} #" "${SourceCore,,}_migrate_scm.txt"
            ztpfsegcut=""
          fi
        done
      fi
    fi
    popd &> /dev/null
  fi
fi
#-----------------------------------------------------------------------------#
sendLOG "INFO" "pid[${SPID}]" "${SPNM##*/}:END ${SourceCore} RC:$RC"
exit "$RC"
#-----------------------------------------------------------------------------#
# vim: filetype=bash
