/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 26 17:55:00 GMT 2018
 */

package com.tsi.workflow.beans.dao;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import java.util.Date;
import org.junit.Test;

public class BuildTest {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
	Build build0 = new Build((Integer) null);
	System system0 = new System();
	build0.setSystemId(system0);
	System system1 = build0.getSystemId();
	assertNull(system1.getName());
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
	Build build0 = new Build();
	Date mockDate0 = new Date(2, 0, (-3197));
	build0.setModifiedDt(mockDate0);
	Date date0 = build0.getModifiedDt();
	assertNotEquals("Thu Mar 30 00:00:00 GMT 1893", date0.toString());
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
	Integer integer0 = new Integer(3);
	Build build0 = new Build(integer0);
	build0.setModifiedBy("-;Tj^<j6o1TXlW");
	String string0 = build0.getModifiedBy();
	assertEquals("-;Tj^<j6o1TXlW", string0);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
	Build build0 = new Build((Integer) null);
	build0.setLoadSetType("");
	String string0 = build0.getLoadSetType();
	assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
	Build build0 = new Build();
	build0.setJobStatus("com.tsi.workflow.beans.dao.Build[ id=");
	String string0 = build0.getJobStatus();
	assertEquals("com.tsi.workflow.beans.dao.Build[ id=", string0);
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
	Integer integer0 = new Integer((-3038));
	Build build0 = new Build(integer0);
	build0.setJobStatus("");
	String string0 = build0.getJobStatus();
	assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
	Build build0 = new Build();
	build0.setJenkinsUrl(".pdq>uwe@|");
	String string0 = build0.getJenkinsUrl();
	assertEquals(".pdq>uwe@|", string0);
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
	Integer integer0 = new Integer((-2402));
	Build build0 = new Build(integer0);
	build0.setJenkinsUrl("");
	String string0 = build0.getJenkinsUrl();
	assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
	Integer integer0 = new Integer(0);
	Build build0 = new Build(integer0);
	Integer integer1 = build0.getId();
	assertEquals(0, (int) integer1);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
	Build build0 = new Build();
	Integer integer0 = new Integer(3340);
	build0.setId(integer0);
	Integer integer1 = build0.getId();
	assertEquals(3340, (int) integer1);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
	Integer integer0 = new Integer((-2402));
	Build build0 = new Build(integer0);
	Integer integer1 = build0.getId();
	assertEquals((-2402), (int) integer1);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
	Build build0 = new Build((Integer) null);
	build0.setCreatedBy("l=@_/");
	String string0 = build0.getCreatedBy();
	assertEquals("l=@_/", string0);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
	Build build0 = new Build();
	build0.setBuildType("$DOI%A4=2{e ms4H#");
	String string0 = build0.getBuildType();
	assertEquals("$DOI%A4=2{e ms4H#", string0);
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
	Build build0 = new Build();
	build0.setBuildStatus("lT;4.yYK");
	String string0 = build0.getBuildStatus();
	assertEquals("lT;4.yYK", string0);
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
	Build build0 = new Build();
	Integer integer0 = new Integer(0);
	build0.setBuildNumber(integer0);
	Integer integer1 = build0.getBuildNumber();
	assertEquals(0, (int) integer1);
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
	Integer integer0 = new Integer((-3038));
	Build build0 = new Build(integer0);
	build0.setBuildNumber(integer0);
	Integer integer1 = build0.getBuildNumber();
	assertEquals((-3038), (int) integer1);
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
	Build build0 = new Build();
	Integer integer0 = new Integer(651);
	build0.setBuildNumber(integer0);
	Integer integer1 = build0.getBuildNumber();
	assertEquals(651, (int) integer1);
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
	Build build0 = new Build();
	Date mockDate0 = new Date(545L);
	build0.setBuildDateTime(mockDate0);
	Date date0 = build0.getBuildDateTime();
	assertSame(date0, mockDate0);
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
	Build build0 = new Build();
	build0.setActive("u%c-#(NoB]6q%");
	String string0 = build0.getActive();
	assertEquals("u%c-#(NoB]6q%", string0);
    }

    @Test(timeout = 4000)
    public void test19() throws Throwable {
	Build build0 = new Build();
	Integer integer0 = new Integer((-4341));
	build0.setId(integer0);
	Build build1 = new Build();
	boolean boolean0 = build0.equals(build1);
	assertFalse(boolean0);
	assertFalse(build1.equals((Object) build0));
    }

    @Test(timeout = 4000)
    public void test20() throws Throwable {
	Build build0 = new Build();
	Integer integer0 = new Integer((-330));
	Build build1 = new Build(integer0);
	boolean boolean0 = build0.equals(build1);
	assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
	Integer integer0 = new Integer(2396);
	Build build0 = new Build(integer0);
	boolean boolean0 = build0.equals(build0);
	assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
	Build build0 = new Build();
	ImpPlan impPlan0 = new ImpPlan();
	boolean boolean0 = build0.equals(impPlan0);
	assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
	Build build0 = new Build();
	boolean boolean0 = build0.equals(build0);
	assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test24() throws Throwable {
	Build build0 = new Build();
	build0.hashCode();
    }

    @Test(timeout = 4000)
    public void test25() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.getBuildStatus();
	assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test26() throws Throwable {
	Build build0 = new Build();
	build0.setLoadSetType("u%c-#(NoB]6q%");
	String string0 = build0.getLoadSetType();
	assertEquals("u%c-#(NoB]6q%", string0);
    }

    @Test(timeout = 4000)
    public void test27() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.getActive();
	assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test28() throws Throwable {
	Build build0 = new Build();
	Date mockDate0 = new Date(0, (-1), (-279), (-5084), (-279), 5);
	build0.setCreatedDt(mockDate0);
	Date date0 = build0.getCreatedDt();
	assertSame(date0, mockDate0);
    }

    @Test(timeout = 4000)
    public void test29() throws Throwable {
	Build build0 = new Build();
	build0.setCreatedBy("");
	String string0 = build0.getCreatedBy();
	assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test30() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.getJobStatus();
	assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test31() throws Throwable {
	Build build0 = new Build();
	build0.setBuildType("");
	String string0 = build0.getBuildType();
	assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test32() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.getLoadSetType();
	assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
	Build build0 = new Build();
	Date date0 = build0.getCreatedDt();
	assertNull(date0);
    }

    @Test(timeout = 4000)
    public void test34() throws Throwable {
	Build build0 = new Build();
	build0.setBuildStatus("");
	String string0 = build0.getBuildStatus();
	assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test35() throws Throwable {
	Build build0 = new Build();
	ImpPlan impPlan0 = new ImpPlan();
	build0.setPlanId(impPlan0);
	ImpPlan impPlan1 = build0.getPlanId();
	assertNull(impPlan1.getPlanDesc());
    }

    @Test(timeout = 4000)
    public void test36() throws Throwable {
	Build build0 = new Build();
	Date date0 = build0.getBuildDateTime();
	assertNull(date0);
    }

    @Test(timeout = 4000)
    public void test37() throws Throwable {
	Build build0 = new Build();
	Integer integer0 = build0.getBuildNumber();
	assertNull(integer0);
    }

    @Test(timeout = 4000)
    public void test38() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.getBuildType();
	assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test39() throws Throwable {
	Build build0 = new Build();
	ImpPlan impPlan0 = build0.getPlanId();
	assertNull(impPlan0);
    }

    @Test(timeout = 4000)
    public void test40() throws Throwable {
	Build build0 = new Build();
	Integer integer0 = build0.getId();
	assertNull(integer0);
    }

    @Test(timeout = 4000)
    public void test41() throws Throwable {
	Build build0 = new Build();
	Integer integer0 = new Integer((-78));
	build0.setId(integer0);
	build0.hashCode();
    }

    @Test(timeout = 4000)
    public void test42() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.toString();
	assertEquals("com.tsi.workflow.beans.dao.Build[ id=null ]", string0);
    }

    @Test(timeout = 4000)
    public void test43() throws Throwable {
	Build build0 = new Build();
	Date date0 = build0.getModifiedDt();
	assertNull(date0);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
	Build build0 = new Build();
	build0.setActive("");
	String string0 = build0.getActive();
	assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test45() throws Throwable {
	Build build0 = new Build();
	build0.setModifiedBy("");
	String string0 = build0.getModifiedBy();
	assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test46() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.getModifiedBy();
	assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test47() throws Throwable {
	Build build0 = new Build();
	System system0 = build0.getSystemId();
	assertNull(system0);
    }

    @Test(timeout = 4000)
    public void test48() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.getCreatedBy();
	assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test49() throws Throwable {
	Build build0 = new Build();
	String string0 = build0.getJenkinsUrl();
	assertNull(string0);
    }
}
