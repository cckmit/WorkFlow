CREATE TABLE public.activity_log ( id SERIAL PRIMARY KEY, imp_id text, plan_id text, log_level text, message text, created_dt timestamp without time zone, created_by character varying(50), modified_dt timestamp without time zone, modified_by character varying(50), active character varying(1) );
CREATE TABLE public.build ( id SERIAL PRIMARY KEY, system_id integer, plan_id text, active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, build_type character varying(10), load_set_type character varying(10), jenkins_url text, build_status character varying(20), job_status character varying(1), build_number integer, build_date_time timestamp without time zone );
CREATE TABLE public.checkout_segments ( id SERIAL PRIMARY KEY, imp_id text, plan_id text, program_name text, repo_desc text, commit_id text, author_name text, author_mail_id text, committer_name text, committer_mail_id text, commit_date_time timestamp without time zone, subject text, func_area text, target_system text, status character varying(1), source_url text, prod_flag character varying(10), file_name text, file_hash_code text, file_type text, created_dt timestamp without time zone, created_by character varying(50), modified_dt timestamp without time zone, modified_by character varying(50), active character varying(1), system_load integer, review_status boolean DEFAULT false, common_file boolean, ref_load_date timestamp without time zone, ref_status text, ref_plan text );
CREATE TABLE public.dbcr ( id SERIAL PRIMARY KEY, system_id integer, plan_id text, dbcr_name character varying(10), environment character varying(10), active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, status character varying(10), mandatory character varying(1) );
CREATE TABLE public.imp_plan ( id TEXT PRIMARY KEY, plan_desc text, approver text, project_id integer, load_type character varying(10), load_attendee character varying(50), lead_id text, lead_contact character varying(12), cls_comment text, sdm_tkt_num text, related_plans text, oth_contact character varying(100), mgmt_comment text, created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1), plan_status text, prod_ver text, process_id character varying(10), dev_manager text, approve_date_time timestamp without time zone, accepted_date_time timestamp without time zone, fallback_date_time timestamp without time zone, lead_name text, dev_manager_name text, approver_name text, delegate_id text, delegate_name text, macro_header boolean, dev_mgr_comment text, qa_bypass_status text, dev_mgr_approve_date_time timestamp without time zone, load_date_mail_flag boolean DEFAULT false );
CREATE TABLE public.imp_plan_approvals ( id SERIAL PRIMARY KEY, plan_id text, approval_type text, approved_by text, comments text, file_name text, created_dt timestamp without time zone, created_by character varying(50), modified_dt timestamp without time zone, modified_by character varying(50), active character varying(1) );
CREATE TABLE public.implementation ( id TEXT PRIMARY KEY, plan_id text, dev_name text, dev_contact text, dev_location text, imp_desc text, tkt_num text, created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1), peer_review text, peer_reviewers text, prod_ver text, dbcr_ref text, imp_status text, process_id character varying(10), substatus text, reassign_flag character varying(10), tkt_url text, checkin_date_time timestamp without time zone, pr_tkt_num text, dev_id text, peer_reviewers_name text, is_checkin boolean, last_checkin_status character varying(1), bypass_peer_review boolean, reviewers_done text );
CREATE TABLE public.legacy_fallback_plan ( id SERIAL PRIMARY KEY, load_date_time character varying(50), plan_id character varying(25), program_name character varying(25), target_system character varying(25), func_area character varying(25), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1) );
CREATE TABLE public.load_categories ( id SERIAL PRIMARY KEY, system_id integer, name character varying(1), description text, created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1) );
CREATE TABLE public.load_freeze ( id SERIAL PRIMARY KEY, load_category_id integer, reason text, from_date timestamp without time zone, to_date timestamp without time zone, created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1) );
CREATE TABLE public.load_freeze_group ( ids text, name character varying(10), load_categories text, reason text, from_date timestamp without time zone, to_date timestamp without time zone );
CREATE TABLE public.load_window ( id SERIAL PRIMARY KEY, load_category_id integer, days_of_week character varying(3), time_slot time without time zone, created_dt timestamp without time zone, created_by character varying(50), modified_dt timestamp without time zone, modified_by character varying(50), active character varying(1) );
CREATE TABLE public.pddds_library ( id SERIAL PRIMARY KEY, system_id integer, type text, name text, active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone );
CREATE TABLE public.platform ( id SERIAL PRIMARY KEY, name text, nick_name character varying(5), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1) );
CREATE TABLE public.pre_production_loads ( id SERIAL PRIMARY KEY, plan_id text, system_id integer, cpu_id integer, system_load_id integer, status text, activated_date_time timestamp without time zone, de_activated_date_time timestamp without time zone, last_action_status text, active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, system_load_action_id integer );
CREATE TABLE public.production_loads ( id SERIAL PRIMARY KEY, plan_id text, system_id integer, system_load_id integer, status text, activated_date_time timestamp without time zone, de_activated_date_time timestamp without time zone, last_action_status text, active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, cpu_id integer, fallback_activated_date_time timestamp without time zone, fallback_de_activated_date_time timestamp without time zone );
CREATE TABLE public.project ( id SERIAL PRIMARY KEY, project_number text, project_name text, line_of_business text, manager_id text, sponsor_id text, created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1), is_delta boolean DEFAULT false );
CREATE TABLE public.put_level ( id SERIAL PRIMARY KEY, system_id integer, put_level character varying(10), put_date_time timestamp without time zone, scm_url text, active character varying(1), created_by character varying(50), modified_by character varying(50), created_dt timestamp without time zone, modified_dt timestamp without time zone );
CREATE TABLE public.system ( id SERIAL PRIMARY KEY, platform_id integer, name character varying(10), ipaddress text, portno integer, defalut_put_level integer, created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1), loadset_name_prefix character varying(1), default_prod_cpu integer, default_native_cpu integer, default_pre_prod_cpu integer );
CREATE TABLE public.system_cpu ( id SERIAL PRIMARY KEY, system_id integer, cpu_name character varying(25), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1), primary_ip_address text, secondary_ip_address text, cpu_type text, display_name character varying(25), cpu_code character varying(25) );
CREATE TABLE public.system_load ( id SERIAL PRIMARY KEY, plan_id text, system_id integer, load_category_id integer, load_scr text, preload text, preload_desc text, flbk_scr text, created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, active character varying(1), load_attendee text, preload_just text, load_scr_desc text, flbk_scr_desc text, load_date_time timestamp without time zone, put_level_id integer, dsl_update character varying(1), load_set_name character varying(25), fallback_load_set_name character varying(25), prod_load_status text, load_instruction text, qa_functional_bypass_comment text, qa_regression_bypass_comment text, qa_bypass_status text, load_attendee_id text );
CREATE TABLE public.system_load_actions ( id SERIAL PRIMARY KEY, plan_id text, system_id integer, system_load_id integer, vpar_id integer, status text, activated_date_time timestamp without time zone, de_activated_date_time timestamp without time zone, active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, last_action_status text, test_status text, is_auto_deploy boolean DEFAULT false, dsl_update character varying(1) DEFAULT 'N'::character varying );
CREATE TABLE public.system_pddds_mapping ( id SERIAL PRIMARY KEY, plan_id text, system_load_id integer, pddds_library_id integer, active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone );
CREATE TABLE public.user_settings ( id SERIAL PRIMARY KEY, name text, value text, user_id text, active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone );
CREATE TABLE public.vpars ( id SERIAL PRIMARY KEY, system_id integer, name character varying(10), ipaddress character varying(15), port character varying(4), type character varying(20), active character varying(1), created_by character varying(50), created_dt timestamp without time zone, modified_by character varying(50), modified_dt timestamp without time zone, owner_id text, tss_deploy boolean DEFAULT false );
ALTER TABLE ONLY public.activity_log ADD CONSTRAINT activity_log_imp_id_fkey FOREIGN KEY (imp_id) REFERENCES public.implementation(id);
ALTER TABLE ONLY public.activity_log ADD CONSTRAINT activity_log_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.build ADD CONSTRAINT build_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.build ADD CONSTRAINT build_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.checkout_segments ADD CONSTRAINT checkout_segments_imp_id_fkey FOREIGN KEY (imp_id) REFERENCES public.implementation(id);
ALTER TABLE ONLY public.checkout_segments ADD CONSTRAINT checkout_segments_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.checkout_segments ADD CONSTRAINT checkout_segments_system_load_fkey FOREIGN KEY (system_load) REFERENCES public.system_load(id);
ALTER TABLE ONLY public.dbcr ADD CONSTRAINT dbcr_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.dbcr ADD CONSTRAINT dbcr_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.imp_plan_approvals ADD CONSTRAINT imp_plan_approvals_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.imp_plan ADD CONSTRAINT imp_plan_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.project(id);
ALTER TABLE ONLY public.implementation ADD CONSTRAINT implementation_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.load_categories ADD CONSTRAINT load_categories_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.load_freeze ADD CONSTRAINT load_freeze_load_category_id_fkey FOREIGN KEY (load_category_id) REFERENCES public.load_categories(id);
ALTER TABLE ONLY public.load_window ADD CONSTRAINT load_window_load_category_id_fkey FOREIGN KEY (load_category_id) REFERENCES public.load_categories(id);
ALTER TABLE ONLY public.pddds_library ADD CONSTRAINT pddds_library_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.pre_production_loads ADD CONSTRAINT pre_production_loads_cpu_id_fkey FOREIGN KEY (cpu_id) REFERENCES public.system_cpu(id);
ALTER TABLE ONLY public.pre_production_loads ADD CONSTRAINT pre_production_loads_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.pre_production_loads ADD CONSTRAINT pre_production_loads_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.pre_production_loads ADD CONSTRAINT pre_production_loads_system_load_action_id_fkey FOREIGN KEY (system_load_action_id) REFERENCES public.system_load_actions(id);
ALTER TABLE ONLY public.pre_production_loads ADD CONSTRAINT pre_production_loads_system_load_id_fkey FOREIGN KEY (system_load_id) REFERENCES public.system_load(id);
ALTER TABLE ONLY public.production_loads ADD CONSTRAINT production_loads_cpu_id_fkey FOREIGN KEY (cpu_id) REFERENCES public.system_cpu(id);
ALTER TABLE ONLY public.production_loads ADD CONSTRAINT production_loads_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.production_loads ADD CONSTRAINT production_loads_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.production_loads ADD CONSTRAINT production_loads_system_load_id_fkey FOREIGN KEY (system_load_id) REFERENCES public.system_load(id);
ALTER TABLE ONLY public.put_level ADD CONSTRAINT put_level_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.system_cpu ADD CONSTRAINT system_cpu_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.system_load_actions ADD CONSTRAINT system_load_actions_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.system_load_actions ADD CONSTRAINT system_load_actions_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.system_load_actions ADD CONSTRAINT system_load_actions_system_load_id_fkey FOREIGN KEY (system_load_id) REFERENCES public.system_load(id);
ALTER TABLE ONLY public.system_load_actions ADD CONSTRAINT system_load_actions_vpar_id_fkey FOREIGN KEY (vpar_id) REFERENCES public.vpars(id);
ALTER TABLE ONLY public.system_load ADD CONSTRAINT system_load_load_category_id_fkey FOREIGN KEY (load_category_id) REFERENCES public.load_categories(id);
ALTER TABLE ONLY public.system_load ADD CONSTRAINT system_load_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.system_load ADD CONSTRAINT system_load_put_level_id_fkey FOREIGN KEY (put_level_id) REFERENCES public.put_level(id);
ALTER TABLE ONLY public.system_load ADD CONSTRAINT system_load_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
ALTER TABLE ONLY public.system_pddds_mapping ADD CONSTRAINT system_pddds_mapping_pddds_library_id_fkey FOREIGN KEY (pddds_library_id) REFERENCES public.pddds_library(id);
ALTER TABLE ONLY public.system_pddds_mapping ADD CONSTRAINT system_pddds_mapping_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.imp_plan(id);
ALTER TABLE ONLY public.system_pddds_mapping ADD CONSTRAINT system_pddds_mapping_system_load_id_fkey FOREIGN KEY (system_load_id) REFERENCES public.system_load(id);
ALTER TABLE ONLY public.system ADD CONSTRAINT system_platform_id_fkey FOREIGN KEY (platform_id) REFERENCES public.platform(id);
ALTER TABLE ONLY public.vpars ADD CONSTRAINT vpars_system_id_fkey FOREIGN KEY (system_id) REFERENCES public.system(id);
CREATE VIEW load_freeze_date AS SELECT CURRENT_DATE + i AS date, b.system_id , count(b.system_id) AS category_count FROM load_freeze a, load_categories b, generate_series(1, 365) i WHERE CURRENT_DATE + i BETWEEN date_trunc('day',a.from_date) AND date_trunc('day', a.to_date) + interval '1 day' - interval '1 second' AND a.active LIKE 'Y' AND a.load_category_id = b.id AND b.active LIKE 'Y' GROUP BY b.system_id, i ORDER BY 1,3;
CREATE VIEW load_window_date AS SELECT CURRENT_DATE + i AS date, b.id as load_category_id FROM load_categories b, generate_series(1, 365) i WHERE b.active = 'Y' AND to_char(CURRENT_DATE + i,'Dy') not in (SELECT days_of_week FROM load_window WHERE load_category_id = b.id AND active = 'Y') ORDER BY 1,2;
CREATE VIEW load_freeze_group AS SELECT array_to_string(array_agg(a.id), ','::text) AS ids, c.name, array_to_string(array_agg(b.name), ','::text) AS load_categories, a.reason, a.from_date, a.to_date FROM load_freeze a, load_categories b, system c WHERE a.load_category_id = b.id AND c.id = b.system_id AND a.active::text = 'Y'::text AND b.active::text = 'Y'::text GROUP BY a.reason, a.from_date, a.to_date, c.id;
CREATE VIEW load_freeze_date AS SELECT CURRENT_DATE + i AS date, b.system_id , count(b.system_id) AS category_count FROM load_freeze a, load_categories b, generate_series(1, 365) i WHERE CURRENT_DATE + i BETWEEN date_trunc('day',a.from_date) AND date_trunc('day', a.to_date) + interval '1 day' - interval '1 second' AND a.active LIKE 'Y' AND a.load_category_id = b.id AND b.active LIKE 'Y' GROUP BY b.system_id, i ORDER BY 1,3;
CREATE VIEW load_window_date AS SELECT CURRENT_DATE + i AS date, b.id as load_category_id FROM load_categories b, generate_series(1, 365) i WHERE b.active = 'Y' AND to_char(CURRENT_DATE + i,'Dy') not in (SELECT days_of_week FROM load_window WHERE load_category_id = b.id AND active = 'Y') ORDER BY 1,2;
CREATE VIEW load_freeze_group AS SELECT array_to_string(array_agg(a.id), ','::text) AS ids, c.name, array_to_string(array_agg(b.name), ','::text) AS load_categories, a.reason, a.from_date, a.to_date FROM load_freeze a, load_categories b, system c WHERE a.load_category_id = b.id AND c.id = b.system_id AND a.active::text = 'Y'::text AND b.active::text = 'Y'::text GROUP BY a.reason, a.from_date, a.to_date, c.id;
